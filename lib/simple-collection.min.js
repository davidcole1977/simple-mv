'use strict';function unsubscribe(subscription){subscription.unsubscribe()}function create(options){var newCollection;if(options='object'==typeof options?options:{},newCollection=Object.create(collectionPrototype),newCollection.id=_.uniqueId('collection_'),newCollection.subsList=modelSubsLists.create(),newCollection.selfSubscriptions={},sh.overridesProps(collectionPrototype,options))throw new Error('create(): Overriding collection prototype parameters is not permitted');return _.assign(newCollection,_.cloneDeep(defaultOptions),_.cloneDeep(options)),'function'==typeof options.initialise&&options.initialise.call(newCollection),newCollection}function extend(options){if(!sh.isAnObject(options))throw new Error('extend(options) expects a single argument: options {object}');return{create:create.bind(null,options)}}var sh=require('./simple-helpers'),_=require('lodash'),modelSubsLists=require('./model-subscriptions'),GLOBAL_CONFIG=require('./global-config'),EVENT_TYPES=GLOBAL_CONFIG.EVENT_TYPES,collectionPrototype,defaultOptions;collectionPrototype={emitCollectionEvent:function(keypath,eventType){var publishParams={};this.subsList.publish(eventType,publishParams)},on:function(){var newSubscription,topic=arguments[0],topicNameSpace=2===arguments.length?null:arguments[1],callback=2===arguments.length?arguments[1]:arguments[2];'undefined'==typeof this.selfSubscriptions[topic]&&(this.selfSubscriptions[topic]={unNameSpaced:[]}),null!==topicNameSpace&&'undefined'==typeof this.selfSubscriptions[topic][topicNameSpace]&&(this.selfSubscriptions[topic][topicNameSpace]=[]),newSubscription=this.subsList.createSubscription(topic,callback),null===topicNameSpace?this.selfSubscriptions[topic].unNameSpaced.push(newSubscription):this.selfSubscriptions[topic][topicNameSpace].push(newSubscription)},off:function(topic,nameSpace){var subsArray;subsArray='undefined'==typeof nameSpace?this.selfSubscriptions[topic].unNameSpaced:this.selfSubscriptions[topic][nameSpace],subsArray.forEach(unsubscribe),subsArray.splice(0,subsArray.length)},save:function(saver){'function'==typeof saver?saver():'function'==typeof this.saver&&this.saver()},fetch:function(fetcher){'function'==typeof fetcher?fetcher():'function'==typeof this.fetcher&&this.fetcher()}},defaultOptions={models:[],saver:null,fetcher:null},module.exports={create:create,extend:extend};