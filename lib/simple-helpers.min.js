'use strict';function bothAreObjects(object1,object2){return'object'==typeof object1&&'object'==typeof object2}function haveSameNumberOfKeys(object1,object2){return Object.keys(object1).length===Object.keys(object2).length}function keyTypesMatch(object1,object2){var areSimilar=Object.keys(object1).every(function(key){return typeof object1[key]==typeof object2[key]});return areSimilar}function propertyIsUndefined(object,property){return'undefined'==typeof object[property]}module.exports={argumentsToArray:function(args){var i,array=[];for(i=0;i<args.length;i+=1)array.push(args[i]);return array},objectsAreSimilar:function(object1,object2){return bothAreObjects(object1,object2)&&haveSameNumberOfKeys(object1,object2)&&keyTypesMatch(object1,object2)},overridesProps:function(originalObj,overrideObj){return!Object.keys(originalObj).every(propertyIsUndefined.bind(null,overrideObj))},isAnObject:function(testValue){return'object'==typeof testValue&&null!==testValue&&!Array.isArray(testValue)},stringContainsOnlyDigits:function(string){return/^[0-9]+$/.test(string)},createFilledArray:function(arrayLength,fillValue){var i,filledArray=[];for(i=0;arrayLength>i;i+=1)filledArray.push(fillValue);return filledArray}};