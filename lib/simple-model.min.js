'use strict';function valuePassesAllValidators(value,validators){return validators.every(function(validatorName){return modelValidators.get(validatorName).isValid(value)})}var sh=require('./simple-helpers'),_=require('lodash'),GLOBAL_CONFIG=require('./global-config'),sce=require('./simple-create-extend'),simpleServerComms=require('./simple-server-comms'),modelValidators=require('./model-validators'),EVENTS=GLOBAL_CONFIG.EVENTS,prototype,defaultOptions,extend,create;prototype={createEventType:EVENTS.MODEL.CREATE,set:function(keypath,value){var eventType;if('string'!=typeof keypath||0===keypath.length)throw new Error('set(keypath, value) expects two arguments, the first of which (keypath) should be a string');if('undefined'==typeof this.data[keypath]||this.data[keypath]!==value){if(this.validationOnSet&&'undefined'!=typeof this.validatorsMap[keypath]&&!valuePassesAllValidators(value,this.validatorsMap[keypath]))throw new Error('set(keypath, value) value failed assigned validation');eventType='undefined'==typeof this.data[keypath]?EVENTS.MODEL.DATUM_CREATE:EVENTS.MODEL.DATUM_UPDATE,this.data[keypath]='undefined'!=typeof value?_.cloneDeep(value):null,this.emitDatumEvent(keypath,eventType)}},get:function(keypath){if('string'!=typeof keypath)throw new Error('get(keypath) expects a single string as an argument');if(!(keypath in this.data))throw new Error('get(keypath) there is no parameter with the specified keypath');return _.cloneDeep(this.data[keypath])},remove:function(keypath){if('string'!=typeof keypath)throw new Error('remove(keypath) expects a single string as an argument');delete this.data[keypath],this.emitDatumEvent(keypath,EVENTS.MODEL.DATUM_REMOVE)},getRawData:function(){return _.cloneDeep(this.data)},assignValidator:function(keypath,validatorName){this.validatorsMap[keypath]||(this.validatorsMap[keypath]=[]),-1===this.validatorsMap[keypath].indexOf(validatorName)&&this.validatorsMap[keypath].push(validatorName)},isValid:function(keypath){return valuePassesAllValidators(this.get(keypath),this.validatorsMap[keypath])},emitDatumEvent:function(keypath,eventType){var publishParams={keypath:keypath,target:this,eventType:eventType};this.emitEvent({eventType:eventType,keypath:keypath,publishParams:publishParams})},emitModelEvent:function(eventType){var publishParams={target:this,eventType:eventType};this.emitEvent({eventType:eventType,publishParams:publishParams})}},_.assign(prototype,simpleServerComms),defaultOptions={type:'model',validatorsMap:{},data:{},validationOnSet:!0,validationOnSave:!0,saver:null,fetcher:null},create=sce.create.bind(null,prototype,defaultOptions),extend=sce.extend.bind(null,create),module.exports={create:create,extend:extend};