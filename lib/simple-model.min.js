'use strict';function valuePassesAllValidators(value,validators){return validators.every(function(validatorName){return modelValidators.get(validatorName).isValid(value)})}function getDeep(data,keys,index,callback){var currentValue=data[keys[index]];'undefined'==typeof currentValue&&callback(new Error('getDeep(): value does not exist in data'),null),index<keys.length-1?getDeep(currentValue,keys,index+1,callback):callback(null,currentValue)}var sh=require('./simple-helpers'),_=require('lodash'),GLOBAL_CONFIG=require('./global-config'),sce=require('./simple-create-extend'),simpleServerComms=require('./simple-server-comms'),modelValidators=require('./model-validators'),EVENTS=GLOBAL_CONFIG.EVENTS,prototype,defaultOptions,extend,create;prototype={eventNamespace:'MODEL',setDeep:function(data,keypath,keys,index,value,callback){var reachedEnd=index===keys.length-1;'undefined'!=typeof data[keys[index]]||reachedEnd||(data[keys[index]]=sh.stringContainsOnlyDigits(keys[index+1])?[]:{}),reachedEnd?this.validationOnSet&&'undefined'!=typeof this.validatorsMap[keypath]&&!valuePassesAllValidators(value,this.validatorsMap[keypath])?callback(new Error('set() value failed assigned validation'),null):(data[keys[index]]=_.cloneDeep(value),callback(null,value)):this.setDeep(data[keys[index]],keypath,keys,index+1,value,callback)},set:function(keypath,value){var eventType,keys,oldValue,datumAlreadyExists;value='undefined'==typeof value?null:value;try{if(oldValue=this.get(keypath),datumAlreadyExists=!0,'undefined'!=typeof oldValue&&oldValue===value)return}catch(error){oldValue=null,datumAlreadyExists=!1}if('string'!=typeof keypath||0===keypath.length)throw new Error('set(keypath, value) expects two arguments, the first of which (keypath) should be a string');keys=keypath.split('.'),this.setDeep(this.data,keypath,keys,0,value,function(error){if(error)throw error}),eventType=datumAlreadyExists?EVENTS.MODEL.DATUM_UPDATE:EVENTS.MODEL.DATUM_CREATE,this.emitEvent(eventType,keypath)},get:function(keypath){var keys,returnValue,datumExists;if('string'!=typeof keypath)throw new Error('get(keypath) expects a single string as an argument');if(keys=keypath.split('.'),datumExists=!0,getDeep(this.data,keys,0,function(error,value){error&&(datumExists=!1),returnValue=value}),!datumExists)throw new Error('get(keypath) specified keypath doesn\'t exist in model data');return _.cloneDeep(returnValue)},remove:function(keypath){if('string'!=typeof keypath)throw new Error('remove(keypath) expects a single string as an argument');delete this.data[keypath],this.emitEvent(EVENTS.MODEL.DATUM_REMOVE,keypath)},getRawData:function(){return _.cloneDeep(this.data)},assignValidator:function(keypath,validatorName){this.validatorsMap[keypath]||(this.validatorsMap[keypath]=[]),-1===this.validatorsMap[keypath].indexOf(validatorName)&&this.validatorsMap[keypath].push(validatorName)},isValid:function(keypath){return valuePassesAllValidators(this.get(keypath),this.validatorsMap[keypath])}},_.assign(prototype,simpleServerComms),defaultOptions={type:'model',validatorsMap:{},data:{},validationOnSet:!0,validationOnSave:!0,saver:null,fetcher:null},create=sce.create.bind(null,prototype,defaultOptions),extend=sce.extend.bind(null,create),module.exports={create:create,extend:extend};