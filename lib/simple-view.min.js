'use strict';function create(){var newView=Object.create(viewPrototype);return newView.id=_.uniqueId('view_'),newView.data={},newView.on=spm.on.bind(newView),newView.off=spm.off.bind(newView),newView}var sh=require('./simple-helpers'),_=require('lodash'),spm=require('./simple-prototype-methods'),modelSubs=require('./model-subscriptions'),GLOBAL_CONFIG=require('./global-config'),EVENT_TYPES=GLOBAL_CONFIG.EVENT_TYPES,viewPrototype,defaultOptions,extend;viewPrototype={bind:function(options){var modelData,viewDatum='undefined'==typeof options.viewDatum?null:options.viewDatum,modelDatum='undefined'==typeof options.modelDatum?null:options.modelDatum,eventNameSpace=null===modelDatum?'':':'+modelDatum;if(null===modelDatum)modelData=options.model.getRawData();else try{modelData=options.model.get(modelDatum)}catch(error){modelData=null}null!==modelDatum&&null===viewDatum&&(viewDatum=modelDatum),null===viewDatum?this.data=modelData:this.data[viewDatum]=modelData,options.model.subsList.createSubscription(EVENT_TYPES.DATUM_UPDATE+eventNameSpace,this.receiveBindEvent.bind(this,modelDatum,viewDatum))},addListener:function(options,callback){var eventNameSpace='string'==typeof options.keypath?':'+options.keypath:'';options.model.subsList.createSubscription(options.event+eventNameSpace,callback)},receiveBindEvent:function(modelDatum,viewDatum,modelEvent){var modelData=null===modelDatum?modelEvent.model.getRawData():modelEvent.model.get(modelDatum);null!==viewDatum?this.data[viewDatum]=modelData:this.data=modelData},emitViewEvent:function(){}},defaultOptions={},extend=spm.extend.bind(null,create),module.exports={create:create,extend:extend};